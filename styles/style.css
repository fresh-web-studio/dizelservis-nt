@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box; }

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0; }

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0; }

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0; }

:where(dd[class]) {
  margin-left: 0; }

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none; }

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none; }

:where(address[class]) {
  font-style: normal; }

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0; }

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom); }

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto; }

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit; }

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
  scrollbar-gutter: stable; }

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth; }

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5; }

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex; }

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer; }

/**
  Приводим к единому цвету svg-элементы
 */
[fill] {
  fill: currentColor; }

[stroke] {
  stroke: currentColor; }

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke; }

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important; } }
@font-face {
  font-family: 'Exo 2';
  src: url("./../fonts/Exo2-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap; }
@font-face {
  font-family: 'Jura';
  src: url("./../fonts/Jura-Bold.woff2") format("woff2");
  font-weight: 700;
  font-style: normal;
  font-display: swap; }
:root {
  --color-dark-gray: #20292c;
  --color-gray: #626262;
  --color-lighte: #FFFFFF;
  --color-red: #ff0000;
  --font-family-base: 'Exo 2', Arial, Tahoma, sans-serif;
  --font-family-accent: 'Jura', Arial, Tahoma, sans-serif;
  --container-width: 1220px;
  --container-padding-x: 15px;
  --transition-duration: all .3s ease-in-out; }

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important; }

@media (max-width: 767px) {
  .hidden-mobile {
    display: none !important; } }

@media (min-width: 768px) {
  .visible-mobile {
    display: none !important; } }

body {
  font-family: var(--font-family-base);
  color: var(--color-gray);
  font-size: 16px;
  line-height: 1.3; }

a,
button,
input,
textarea,
svg * {
  transition-duration: var(--transition-duration); }

.container {
  max-width: calc(var(--container-width)+ var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x); }

h1, h2, h3, h5, h6 {
  font-weight: 700; }

h1, .h1 {
  font-size: clamp(43px, 4.1666666667vw, 60px); }

h2, .h2 {
  font-size: clamp(25px, 2.9166666667vw, 42px);
  line-height: 1.14; }

h3, .h3 {
  font-size: clamp(24px, 2.7777777778vw, 40px);
  line-height: 0.7; }

h4, .h4 {
  font-size: clamp(26px, 1.8055555556vw, 26px);
  line-height: 1.3;
  font-weight: 500; }

.burger-button {
  padding: 0;
  background-color: transparent;
  border: none;
  width: 58px;
  aspect-ratio: 1;
  position: relative; }
  @media (hover: hover) {
    .burger-button:hover {
      background-color: var(--color-red);
      color: var(--color-lighte); }
      .burger-button:hover::after {
        background-color: var(--color-lighte); } }
  @media (hover: none) {
    .burger-button:active {
      background-color: var(--color-red);
      color: var(--color-lighte); }
      .burger-button:active::after {
        background-color: var(--color-lighte); } }
  .burger-button::after {
    position: absolute;
    top: 50%;
    left: 50%;
    translate: -50% -50%;
    content: '';
    width: 50%;
    height: 2px;
    background-color: var(--color-dark-gray);
    border-radius: 5px;
    box-shadow: 0 -8px, 0 8px; }

.header-top {
  background-color: var(--color-dark-gray); }
  .header-top__contact {
    display: flex;
    flex-wrap: wrap;
    column-gap: 20px; }
  .header-top__contact li {
    display: flex; }
  .header-top__contact {
    color: var(--color-red);
    padding: var(--container-padding-x); }
  .header-top__contact a {
    color: var(--color-red);
    text-decoration: none; }
  .header-top__contact a:hover {
    text-decoration: underline; }

.phone .icon, .mail .icon {
  width: 19px;
  height: auto;
  fill: var(--color-lighte);
  padding-right: 5px; }

.header-bottom {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: var(--container-padding-x); }

.header-logo_image {
  width: 240px;
  height: 60px; }

.header__menu-list {
  display: flex; }
.header__menu-item {
  position: relative; }
.header__menu-link {
  color: var(--color-dark-gray);
  text-decoration: none;
  text-transform: uppercase;
  white-space: nowrap;
  padding: 20px; }
.header__menu-link:hover {
  color: var(--color-red); }

a.header__menu-link::after {
  background-color: currentColor;
  content: "";
  height: 4px;
  width: 100%;
  position: absolute;
  left: 0;
  bottom: -10px;
  z-index: 203;
  opacity: 0; }

a.header__menu-link:hover::after {
  opacity: 1; }

.cross-button {
  padding: 0;
  background-color: transparent;
  border: none;
  width: 58px;
  aspect-ratio: 1;
  position: relative; }
  @media (hover: hover) {
    .cross-button:hover {
      background-color: var(--color-red); } }
  @media (hover: none) {
    .cross-button:active {
      background-color: var(--color-red); } }
  .cross-button::before, .cross-button::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 9px;
    width: 70%;
    height: 2px;
    background-color: var(--color-dark-gray); }
  .cross-button::before {
    rotate: 45deg; }
  .cross-button::after {
    rotate: -45deg; }
  .cross-button:hover::before, .cross-button:hover::after {
    background-color: var(--color-lighte); }

.mobile-overlay {
  width: 100%;
  height: 100%;
  margin: 0;
  border: 0; }
  .mobile-overlay:modal {
    max-width: 100%;
    max-height: 100%; }
  .mobile-overlay__close-button-wrapper {
    display: flex;
    justify-content: end; }
  .mobile-overlay__list {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    min-height: 80vh; }

/*# sourceMappingURL=style.css.map */
